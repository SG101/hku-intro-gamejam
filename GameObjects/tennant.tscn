[gd_scene load_steps=3 format=3 uid="uid://cvfnn6n7yysgn"]

[sub_resource type="GDScript" id="GDScript_27hbp"]
resource_name = "tennant"
script/source = "extends Node3D

const SPEED : float = 5

var coffee_pos : float = 0
var light_pos : float = 0
var door_pos : float = 0

var state : Callable = decider

@onready var animp : AnimationPlayer = %AnimationPlayer
@onready var bed : Node3D = %Bed
@onready var room : Room  = self.get_parent()

func _ready():
	if room == null:
		print(\"WARNING: room is null\")

func do_move_to_target(target : float, delta: float) -> bool:
	self.position.x = move_toward(self.position.x, target, SPEED * delta)
	return self.position.x == target

# GO TO BED
func start_go_to_bed(delta : float):
	self.animp.play(\"walk\")
	self.state = self.process_go_to_bed

func process_go_to_bed(delta : float):
	if self.do_move_to_target(bed.position.x, delta):
		self.state = start_sleep
	if GameState.can_sleep():
		self.state = decider

# SLEEP
func start_sleep(delta : float):
	self.animp.play(\"sleep\")
	self.state = process_sleep

func process_sleep(delta : float):
	if !self.animp.is_playing():
		pass # TODO END GAME

func decider(delta : float):
#	if room.lights_on:
#		self.state = self.start_lights
#	else:
		self.state = self.start_go_to_bed

func _process(delta: float):
	self.state.call(delta)
"

[sub_resource type="QuadMesh" id="QuadMesh_057fa"]
size = Vector2(1, 2)

[node name="Tennant" type="Node3D"]
script = SubResource("GDScript_27hbp")

[node name="MeshInstance3D" type="MeshInstance3D" parent="."]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0)
mesh = SubResource("QuadMesh_057fa")

[node name="AnimationPlayer" type="AnimationPlayer" parent="."]
unique_name_in_owner = true
